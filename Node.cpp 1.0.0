//Node.cpp
#include "Node.h"

//constructores
Node::Node() : e(), firstHijo(NULL), nextPrimo(NULL){};

Node::Node(Element newe) : e(newe), firstHijo(NULL), nextPrimo(NULL){};

Node::Node(Element newe, Node *first, Node *next) : e(newe), firstHijo(first), nextPrimo(next){};

//constructor copia
Node::Node(Node& n) : e(n.element()), firstHijo(n.firstChild()), nextPrimo(n.nextSibling()){};

//Observadores
Node *Node::firstChild(){return firstHijo;}

Node *Node::nextSibling(){return nextPrimo;}

Element Node::element(){return e;}

//Modificadores
void Node::setElement(int newe){e=newe;}

void Node::setFirstChild(Node *first){firstHijo=first;}

void Node::setNextSibling(Node *next){nextPrimo=next;}

//sobrecarga =
Node Node::operator=(Node& n)
{
	e=n.element();
	firstHijo=n.firstChild();
	nextPrimo=n.nextSibling();
}
